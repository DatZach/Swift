# This is the CMakeCache file.
# For build in directory: x:/Swift/Source/Engine/lib/openal-soft-1.15.1/build-release
# It was generated by CMake: C:/Program Files (x86)/CMake 2.8/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUI's for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Check for ALSA backend
ALSA:BOOL=ON

//Install alsoft.conf sample configuration file
ALSOFT_CONFIG:BOOL=ON

//For backwards compatibility, what version of CMake commands and
// syntax should this version of CMake try to support.
CMAKE_BACKWARDS_COMPATIBILITY:STRING=2.4

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
CMAKE_BUILD_TYPE:STRING=Release

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//C compiler.
CMAKE_C_COMPILER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin/cl.exe

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING= /DWIN32 /D_WINDOWS /W3 /Zm1000

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=/D_DEBUG /MDd /Zi  /Ob0 /Od /RTC1

//Flags used by the compiler during release minsize builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /D NDEBUG

//Flags used by the compiler during release builds (/MD /Ob1 /Oi
// /Ot /Oy /Gs will produce slightly less optimized but smaller
// files).
CMAKE_C_FLAGS_RELEASE:STRING=/MT /O2 /Ob2 /D NDEBUG

//Flags used by the compiler during Release with Debug Info builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /D NDEBUG

//Libraries linked by defalut with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING='kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib '

//Library postfix for debug builds. Normally left blank.
CMAKE_DEBUG_POSTFIX:STRING=

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=' /STACK:10000000 /machine:X86 '

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/OpenAL

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin/link.exe

//Program used to build from makefiles.
CMAKE_MAKE_PROGRAM:STRING=nmake

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=' /STACK:10000000 /machine:X86 '

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=OpenAL

//RC compiler.
CMAKE_RC_COMPILER:FILEPATH=C:/Program Files (x86)/Windows Kits/8.0/bin/x86/rc.exe

//Flags for Fortran compiler.
CMAKE_RC_FLAGS:STRING=' '

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=' /STACK:10000000 /machine:X86 '

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=OFF

//If true, cmake will use relative paths in makefiles and projects.
CMAKE_USE_RELATIVE_PATHS:BOOL=OFF

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=OFF

//Check for CoreAudio backend
COREAUDIO:BOOL=ON

//Check for the dlopen API for loading optional libs
DLOPEN:BOOL=ON

//Check for DirectSound backend
DSOUND:BOOL=ON

//Build and install example programs
EXAMPLES:BOOL=ON

//Single output directory for building all executables.
EXECUTABLE_OUTPUT_PATH:PATH=

//Force /MT for static VC runtimes
FORCE_STATIC_VCRT:BOOL=OFF

//Single output directory for building all libraries.
LIBRARY_OUTPUT_PATH:PATH=

//Check for MMDevApi
MMDEVAPI:BOOL=ON

//Check for ARM Neon CPU extensions
NEON:BOOL=ON

//Check for OpenSL backend
OPENSL:BOOL=ON

//Check for OSS backend
OSS:BOOL=ON

//Dependencies for the target
OpenAL32_LIB_DEPENDS:STATIC=general;winmm;

//Value Computed by CMake
OpenAL_BINARY_DIR:STATIC=X:/Swift/Source/Engine/lib/openal-soft-1.15.1/build-release

//Value Computed by CMake
OpenAL_SOURCE_DIR:STATIC=X:/Swift/Source/Engine/lib/openal-soft-1.15.1

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=PKG_CONFIG_EXECUTABLE-NOTFOUND

//Check for PortAudio backend
PORTAUDIO:BOOL=ON

//Check for PulseAudio backend
PULSEAUDIO:BOOL=ON

//Require ALSA backend
REQUIRE_ALSA:BOOL=OFF

//Require CoreAudio backend
REQUIRE_COREAUDIO:BOOL=OFF

//Require DirectSound backend
REQUIRE_DSOUND:BOOL=OFF

//Require MMDevApi
REQUIRE_MMDEVAPI:BOOL=OFF

//Require ARM Neon CPU extensions
REQUIRE_NEON:BOOL=OFF

//Require OpenSL backend
REQUIRE_OPENSL:BOOL=OFF

//Require OSS backend
REQUIRE_OSS:BOOL=OFF

//Require PortAudio backend
REQUIRE_PORTAUDIO:BOOL=OFF

//Require PulseAudio backend
REQUIRE_PULSEAUDIO:BOOL=OFF

//Require SndIO backend
REQUIRE_SNDIO:BOOL=OFF

//Require Solaris backend
REQUIRE_SOLARIS:BOOL=OFF

//Require SSE CPU extensions
REQUIRE_SSE:BOOL=OFF

//Require Windows Multimedia backend
REQUIRE_WINMM:BOOL=OFF

//Check for SndIO backend
SNDIO:BOOL=ON

//Check for Solaris backend
SOLARIS:BOOL=ON

//Check for SSE CPU extensions
SSE:BOOL=ON

//Build and install utility programs
UTILS:BOOL=ON

//Enable Wave Writer backend
WAVE:BOOL=ON

//Treat compile warnings as errors
WERROR:BOOL=OFF

//Enable use of Wine headers when compiling
WINE:BOOL=OFF

//Check for Windows Multimedia backend
WINMM:BOOL=ON


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_BUILD_TOOL
CMAKE_BUILD_TOOL-ADVANCED:INTERNAL=1
//What is the target build tool cmake is generating for.
CMAKE_BUILD_TOOL:INTERNAL=nmake
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=x:/Swift/Source/Engine/lib/openal-soft-1.15.1/build-release
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=2
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=8
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=5
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files (x86)/CMake 2.8/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files (x86)/CMake 2.8/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files (x86)/CMake 2.8/bin/ctest.exe
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
CMAKE_C_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
CMAKE_DETERMINE_C_ABI_COMPILED:INTERNAL=TRUE
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=C:/Program Files (x86)/CMake 2.8/bin/cmake-gui.exe
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of generator.
CMAKE_GENERATOR:INTERNAL=NMake Makefiles
//Start directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=X:/Swift/Source/Engine/lib/openal-soft-1.15.1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_LOCAL_GENERATORS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files (x86)/CMake 2.8/share/cmake-2.8
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//Suppress Warnings that are meant for the author of the CMakeLists.txt
// files.
CMAKE_SUPPRESS_DEVELOPER_WARNINGS:INTERNAL=FALSE
//ADVANCED property for variable: CMAKE_USE_RELATIVE_PATHS
CMAKE_USE_RELATIVE_PATHS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
FFMPEG_CFLAGS:INTERNAL=
FFMPEG_CFLAGS_I:INTERNAL=
FFMPEG_CFLAGS_OTHER:INTERNAL=
FFMPEG_FOUND:INTERNAL=
FFMPEG_INCLUDEDIR:INTERNAL=
FFMPEG_LIBDIR:INTERNAL=
FFMPEG_LIBS:INTERNAL=
FFMPEG_LIBS_L:INTERNAL=
FFMPEG_LIBS_OTHER:INTERNAL=
FFMPEG_LIBS_PATHS:INTERNAL=
FFMPEG_PREFIX:INTERNAL=
FFMPEG_STATIC_CFLAGS:INTERNAL=
FFMPEG_STATIC_CFLAGS_I:INTERNAL=
FFMPEG_STATIC_CFLAGS_OTHER:INTERNAL=
FFMPEG_STATIC_LIBDIR:INTERNAL=
FFMPEG_STATIC_LIBS:INTERNAL=
FFMPEG_STATIC_LIBS_L:INTERNAL=
FFMPEG_STATIC_LIBS_OTHER:INTERNAL=
FFMPEG_STATIC_LIBS_PATHS:INTERNAL=
FFMPEG_VERSION:INTERNAL=
//Have symbol aligned_alloc
HAVE_ALIGNED_ALLOC:INTERNAL=
//Have include alsa/asoundlib.h
HAVE_ALSA_ASOUNDLIB_H:INTERNAL=
//Have include arm_neon.h
HAVE_ARM_NEON_H:INTERNAL=
//Have include /System/Library/Frameworks/CoreAudio.framework/Headers/CoreAudio.h
HAVE_COREAUDIO_FRAMEWORK:INTERNAL=
//Have include cpuid.h
HAVE_CPUID_H:INTERNAL=
//Have include dlfcn.h
HAVE_DLFCN_H:INTERNAL=
//Have include dsound.h
HAVE_DSOUND_H:INTERNAL=1
//Have include fenv.h
HAVE_FENV_H:INTERNAL=
//Have function finite
HAVE_FINITE:INTERNAL=
//Have include float.h
HAVE_FLOAT_H:INTERNAL=1
//Test HAVE_GCC_FORMAT
HAVE_GCC_FORMAT:INTERNAL=
//Have include guiddef.h
HAVE_GUIDDEF_H:INTERNAL=1
//Have include ieeefp.h
HAVE_IEEEFP_H:INTERNAL=
//Have symbol isfinite
HAVE_ISFINITE:INTERNAL=
//Have symbol isnan
HAVE_ISNAN:INTERNAL=
//Have symbol DirectSoundCreate in dsound
HAVE_LIBDSOUND:INTERNAL=1
//Have library m
HAVE_LIBM:INTERNAL=
//Have symbol timeGetTime in winmm
HAVE_LIBWINMM:INTERNAL=1
//Have symbol lrintf
HAVE_LRINTF:INTERNAL=
//Have include malloc.h
HAVE_MALLOC_H:INTERNAL=1
//Have include mmdeviceapi.h
HAVE_MMDEVICEAPI_H:INTERNAL=1
//Have include HAVE_MMSYSTEM_H
HAVE_MMSYSTEM_H:INTERNAL=1
//Test HAVE_MSSE_SWITCH
HAVE_MSSE_SWITCH:INTERNAL=1
//Have include portaudio.h
HAVE_PORTAUDIO_H:INTERNAL=
//Have symbol posix_memalign
HAVE_POSIX_MEMALIGN:INTERNAL=
//Have include pulse/pulseaudio.h
HAVE_PULSE_PULSEAUDIO_H:INTERNAL=
//Test HAVE_RESTRICT
HAVE_RESTRICT:INTERNAL=
//Result of TRY_COMPILE
HAVE_SIZEOF_LONG:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_SIZEOF_LONG_LONG:INTERNAL=TRUE
//Have includes HAVE_SLES_OPENSLES_ANDROID_H
HAVE_SLES_OPENSLES_ANDROID_H:INTERNAL=
//Have include sndio.h
HAVE_SNDIO_H:INTERNAL=
//Have function snprintf
HAVE_SNPRINTF:INTERNAL=
//Have function stat
HAVE_STAT:INTERNAL=1
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have function strcasecmp
HAVE_STRCASECMP:INTERNAL=
//Have function strncasecmp
HAVE_STRNCASECMP:INTERNAL=
//Have function strtof
HAVE_STRTOF:INTERNAL=
//Have include sys/audioio.h
HAVE_SYS_AUDIOIO_H:INTERNAL=
//Have include sys/soundcard.h
HAVE_SYS_SOUNDCARD_H:INTERNAL=
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have function vsnprintf
HAVE_VSNPRINTF:INTERNAL=1
//Have include windows.h
HAVE_WINDOWS_H:INTERNAL=1
//Have include xmmintrin.h
HAVE_XMMINTRIN_H:INTERNAL=1
//Have symbol _aligned_malloc
HAVE__ALIGNED_MALLOC:INTERNAL=1
//Have symbol _controlfp
HAVE__CONTROLFP:INTERNAL=1
//Have function _finite
HAVE__FINITE:INTERNAL=1
//Have function _isnan
HAVE__ISNAN:INTERNAL=1
//Have function _snprintf
HAVE__SNPRINTF:INTERNAL=1
//Have function _stricmp
HAVE__STRICMP:INTERNAL=1
//Have function _strnicmp
HAVE__STRNICMP:INTERNAL=1
//Have symbol __control87_2
HAVE___CONTROL87_2:INTERNAL=1
//Test HAVE___RESTRICT
HAVE___RESTRICT:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(long)
SIZEOF_LONG:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(long long)
SIZEOF_LONG_LONG:INTERNAL=8
__pkg_config_checked_FFMPEG:INTERNAL=1

