# Please edit this file to control the playback quality for DUMBOGG's example
# program. Note that this does not affect DUMB or DUMBOGG when you use them
# in your own programs; you need to borrow some code from the examples
# themselves in order to get that to happen.

# dumb_resampling_quality is currently unused. In future versions, it will
# come into play when sound_freq is different from the sampling frequency of
# the OGG file being played. In this version, such a scenario will simply
# result in the OGG file being played at the wrong pitch. This variable can
# range from 0 (fastest) to 4 (best). See dumb/docs/dumb.txt for details on
# what the values mean.

# Increase buffer_size to combat stuttering.

# The OGG file will be played at a sampling frequency specified by
# sound_freq. That means your OGG file will play too fast or too slow if you
# don't set sound_freq properly. This will be improved in future versions
# when DUMB's resampling API is improved, finalised and documented. The
# sound_freq variable is also used by Allegro for initialising the sound
# hardware.

# buffer_size and sound_freq are passed directly to al_start_duh(). See this
# function's description in dumb/docs/dumb.txt for information about how to
# use these variables.

# You can ignore the quality variable. Allegro uses it when relaying the
# audio stream to the sound card. 2 is the maximum, and is only comparable
# in quality to dumb_resampling_quality = 1. Only a masochist would reduce
# it. This also means that in order to appreciate the higher quality
# settings you have to choose a value for sound_freq that Allegro can use
# exactly. See Allegro's docs, "Standard config variables", for details on
# how this works.

[sound]
dumb_resampling_quality = 4
buffer_size = 4096
sound_freq = 44100

quality = 2
